<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WhatsApp Analytics Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.js"></script>
    <style>
        :root {
            --primary: #128c7e;
            --primary-dark: #075e54;
            --success: #25d366;
            --light-bg: #f0f2f5;
            --card-shadow: 0 1px 3px rgba(0,0,0,0.08);
        }

        body {
            background-color: var(--light-bg);
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        .navbar {
            background-color: white !important;
            box-shadow: 0 2px 4px rgba(0,0,0,0.08);
        }

        .navbar-brand {
            color: var(--primary) !important;
            font-weight: 600;
        }

        .metric-card {
            background: white;
            border-radius: 12px;
            padding: 20px;
            box-shadow: var(--card-shadow);
            border: none;
            transition: transform 0.2s;
        }

        .metric-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }

        .metric-icon {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            margin-bottom: 12px;
        }

        .metric-value {
            font-size: 32px;
            font-weight: 700;
            line-height: 1;
            margin-bottom: 4px;
        }

        .metric-label {
            color: #667781;
            font-size: 14px;
        }

        .time-toggle {
            background: white;
            border-radius: 24px;
            padding: 4px;
            display: inline-flex;
            box-shadow: var(--card-shadow);
        }

        .time-toggle .btn {
            border-radius: 20px;
            border: none;
            padding: 8px 20px;
            font-size: 14px;
            font-weight: 500;
            background: transparent;
            color: #667781;
        }

        .time-toggle .btn.active {
            background: var(--primary);
            color: white;
        }

        .chart-container {
            background: white;
            border-radius: 12px;
            padding: 24px;
            box-shadow: var(--card-shadow);
            height: 350px;
        }

        .device-card {
            background: white;
            border-radius: 12px;
            padding: 24px;
            box-shadow: var(--card-shadow);
            border: 1px solid #e9ecef;
            transition: all 0.3s;
            height: 100%;
        }

        .device-card.connected {
            border-color: var(--success);
            border-width: 2px;
        }

        .device-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 24px rgba(0,0,0,0.12);
        }

        .device-icon {
            width: 48px;
            height: 48px;
            background: #f0f9f7;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .device-info {
            background: #f8f9fa !important;
            border: 1px solid #e9ecef;
        }

        .device-status {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 6px;
        }

        .device-status.online {
            background-color: var(--success);
        }

        .device-status.offline {
            background-color: #e74c3c;
        }

        .btn-whatsapp {
            background-color: var(--primary);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 10px 20px;
            font-weight: 500;
            transition: all 0.3s;
        }

        .btn-whatsapp:hover {
            background-color: var(--primary-dark);
            color: white;
            transform: translateY(-1px);
        }

        .add-device-card {
            border: 2px dashed #dee2e6;
            background: #fafbfc;
            cursor: pointer;
            min-height: 200px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s;
        }

        .add-device-card:hover {
            border-color: var(--primary);
            background: #f0f9f7;
        }

        .nav-tabs {
            border-bottom: 2px solid #e9ecef;
        }

        .nav-tabs .nav-link {
            border: none;
            color: #667781;
            font-weight: 500;
            padding: 12px 24px;
            background: transparent;
        }

        .nav-tabs .nav-link.active {
            color: var(--primary);
            border-bottom: 3px solid var(--primary);
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-light">
        <div class="container">
            <a class="navbar-brand" href="/">
                <i class="bi bi-whatsapp"></i> WhatsApp Analytics
            </a>
            <div class="ms-auto">
                <span class="navbar-text me-3">
                    <i class="bi bi-person-circle"></i> <%= user.username %>
                </span>
                <button class="btn btn-sm btn-outline-danger" onclick="logout()">
                    <i class="bi bi-box-arrow-right"></i> Logout
                </button>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container mt-4">
        <!-- Tabs -->
        <ul class="nav nav-tabs mb-4" id="mainTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="dashboard-tab" data-bs-toggle="tab" data-bs-target="#dashboard" type="button">
                    <i class="bi bi-speedometer2"></i> Dashboard
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="devices-tab" data-bs-toggle="tab" data-bs-target="#devices" type="button">
                    <i class="bi bi-phone"></i> Devices
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="campaign-tab" data-bs-toggle="tab" data-bs-target="#campaign" type="button">
                    <i class="bi bi-calendar3"></i> Campaign
                </button>
            </li>
        </ul>

        <!-- Tab Content -->
        <div class="tab-content" id="mainTabContent">            <!-- Dashboard Tab -->
            <div class="tab-pane fade show active" id="dashboard" role="tabpanel">
                <!-- Time Range Toggle -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <h5 class="mb-0">Analytics Overview</h5>
                        <small class="text-muted">Today: <%= new Date().toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' }) %> | <span id="lastRefresh">Last refresh: Never</span></small>
                    </div>
                    <div class="d-flex gap-2 align-items-center">
                        <!-- Auto Refresh Toggle -->
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="autoRefreshToggle" checked onchange="toggleAutoRefresh()">
                            <label class="form-check-label" for="autoRefreshToggle">
                                <small>Auto-refresh (10s)</small>
                            </label>
                        </div>
                        
                        <!-- Manual Refresh Button -->
                        <button class="btn btn-sm btn-outline-secondary" onclick="refreshDashboard()" title="Refresh Now">
                            <i class="bi bi-arrow-clockwise"></i>
                        </button>
                        
                        <!-- Device Filter -->
                        <select class="form-select form-select-sm" id="deviceFilter" onchange="filterByDevice()" style="width: 200px;">
                            <option value="all">All Devices</option>
                        </select>
                        
                        <!-- Time Range -->
                        <div class="time-toggle">
                            <button class="btn" onclick="changeTimeRange('today')">Today</button>
                            <button class="btn active" onclick="changeTimeRange(7)">7 Days</button>
                            <button class="btn" onclick="changeTimeRange(30)">30 Days</button>
                            <button class="btn" onclick="changeTimeRange(90)">90 Days</button>
                            <button class="btn" onclick="showCustomDateRange()">Custom</button>
                        </div>
                    </div>
                </div>
                <!-- Custom Date Range (Hidden by default) -->
                <div id="customDateRange" class="card mb-3 d-none">
                    <div class="card-body">
                        <div class="row g-3 align-items-end">
                            <div class="col-md-4">
                                <label class="form-label">Start Date</label>
                                <input type="date" class="form-control" id="startDate" max="">
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">End Date</label>
                                <input type="date" class="form-control" id="endDate" max="">
                            </div>
                            <div class="col-md-4">
                                <button class="btn btn-whatsapp" onclick="applyCustomDateRange()">
                                    <i class="bi bi-check-lg"></i> Apply
                                </button>
                                <button class="btn btn-outline-secondary ms-2" onclick="hideCustomDateRange()">
                                    Cancel
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Metrics Cards -->
                <div class="row g-3 mb-4">
                    <!-- First Row - Device Metrics -->
                    <div class="col-md-3">
                        <div class="metric-card">
                            <div class="metric-icon bg-success bg-opacity-10 text-success">
                                <i class="bi bi-phone-fill"></i>
                            </div>
                            <div class="metric-value" id="activeDevices">0</div>
                            <div class="metric-label">Active Devices</div>
                        </div>
                    </div>                    <div class="col-md-3">
                        <div class="metric-card">
                            <div class="metric-icon bg-danger bg-opacity-10 text-danger">
                                <i class="bi bi-phone-x"></i>
                            </div>
                            <div class="metric-value" id="inactiveDevices">0</div>
                            <div class="metric-label">Inactive Devices</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="metric-card">
                            <div class="metric-icon bg-primary bg-opacity-10 text-primary">
                                <i class="bi bi-send"></i>
                            </div>
                            <div class="metric-value" id="leadsSent">0</div>
                            <div class="metric-label">Leads Sent</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="metric-card">
                            <div class="metric-icon bg-info bg-opacity-10 text-info">
                                <i class="bi bi-inbox"></i>
                            </div>
                            <div class="metric-value" id="leadsReceived">0</div>
                            <div class="metric-label">Leads Received</div>
                            <small class="text-success" id="leadsReceivedPercent">0%</small>
                        </div>
                    </div>
                </div>

                <!-- Second Row - Lead Status Metrics -->
                <div class="row g-3 mb-4">
                    <div class="col-md-3">
                        <div class="metric-card">
                            <div class="metric-icon bg-warning bg-opacity-10 text-warning">
                                <i class="bi bi-x-circle"></i>
                            </div>
                            <div class="metric-value" id="leadsNotReceived">0</div>
                            <div class="metric-label">Leads Not Received</div>
                            <small class="text-danger" id="leadsNotReceivedPercent">0%</small>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="metric-card">
                            <div class="metric-icon bg-success bg-opacity-10 text-success">
                                <i class="bi bi-check-double"></i>
                            </div>
                            <div class="metric-value" id="leadsRead">0</div>
                            <div class="metric-label">Leads Read</div>
                            <small class="text-success" id="leadsReadPercent">0%</small>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="metric-card">
                            <div class="metric-icon bg-secondary bg-opacity-10 text-secondary">
                                <i class="bi bi-check"></i>
                            </div>
                            <div class="metric-value" id="leadsNotRead">0</div>
                            <div class="metric-label">Leads Not Read</div>
                            <small class="text-secondary" id="leadsNotReadPercent">0%</small>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="metric-card">
                            <div class="metric-icon bg-primary bg-opacity-10 text-primary">
                                <i class="bi bi-reply"></i>
                            </div>
                            <div class="metric-value" id="leadsReplied">0</div>
                            <div class="metric-label">Leads Replied</div>
                            <small class="text-primary" id="leadsRepliedPercent">0%</small>
                        </div>
                    </div>
                </div>

                <!-- Chart -->
                <div class="chart-container">
                    <h5 class="mb-3">Daily Message Activity</h5>
                    <canvas id="messageChart"></canvas>
                </div>
            </div>

            <!-- Devices Tab -->
            <div class="tab-pane fade" id="devices" role="tabpanel">
                <!-- Devices Header -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <h4 class="mb-1">WhatsApp Devices</h4>
                        <p class="text-muted mb-0">Manage your connected WhatsApp accounts</p>
                    </div>
                    <button class="btn btn-primary" onclick="addNewDevice()">
                        <i class="bi bi-plus-circle me-2"></i>Add Device
                    </button>
                </div>

                <!-- Devices Grid -->
                <div class="row g-4" id="devicesGrid">
                    <!-- Device cards will be dynamically added here -->
                </div>

                <!-- Empty State -->
                <div id="emptyDeviceState" class="text-center py-5" style="display: none;">
                    <i class="bi bi-phone" style="font-size: 64px; color: #dee2e6;"></i>
                    <h5 class="mt-3 text-muted">No devices connected</h5>
                    <p class="text-muted">Add a device to start using WhatsApp Analytics</p>
                    <button class="btn btn-primary mt-3" onclick="addNewDevice()">
                        <i class="bi bi-plus-circle me-2"></i>Add Your First Device
                    </button>
                </div>
            </div>
            
            <!-- Campaign Tab -->
            <div class="tab-pane fade" id="campaign" role="tabpanel">
                <!-- Campaign Header -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <h4 class="mb-1">Campaign Calendar</h4>
                        <p class="text-muted mb-0">Plan and schedule your WhatsApp broadcast campaigns</p>
                    </div>
                </div>
                
                <!-- Calendar Container -->
                <div class="card">
                    <div class="card-body">
                        <!-- Calendar controls will be added here by JavaScript -->
                        <div id="campaignCalendar"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- QR Code Modal -->
    <div class="modal fade qr-modal" id="qrModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header border-0">
                    <h5 class="modal-title">Scan QR Code</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="qr-container">
                        <div id="qrCode" style="width: 256px; height: 256px; margin: 0 auto; background: #f0f0f0;"></div>
                        <p class="mt-3 text-muted">Scan this QR code with WhatsApp on your phone</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Campaign Modal -->
    <div class="modal fade" id="campaignModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="campaignModalTitle">Create Campaign</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="campaignForm">                        <input type="hidden" id="campaignId">
                        <input type="hidden" id="campaignDate">
                        
                        <div class="mb-3">
                            <label class="form-label">Campaign Title <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="campaignTitle" required>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Niche/Category <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="campaignNiche" required 
                                   placeholder="e.g., Promotion, Announcement, Reminder">
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Message <span class="text-danger">*</span></label>
                            <textarea class="form-control" id="campaignMessage" rows="5" required 
                                      placeholder="Enter your broadcast message..."></textarea>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Image (Optional)</label>
                            <input type="file" class="form-control" id="campaignImageFile" accept="image/*" onchange="compressImage(this)">
                            <small class="text-muted">Max 5MB. Will be compressed automatically.</small>
                            <input type="hidden" id="campaignImageUrl">
                            <div id="imagePreview" class="mt-2"></div>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Scheduled Time (Optional)</label>
                            <input type="time" class="form-control" id="campaignTime">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="saveCampaign()">Save Campaign</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Loading Spinner -->
    <div id="loading">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>        // Global variables
        let messageChart;
        let currentTimeRange = 7;
        let devices = [];
        let currentDeviceFilter = 'all';
        let refreshInterval;
        let isAutoRefreshEnabled = false;  // Default to disabled

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Dashboard v1.1.0 FINAL - All fixes applied');
            console.log('Includes: Device filter fix, auth cookies, proper function definitions');
            initializeChart();
            loadDashboardData(7);
            loadDevices();
            
            // Set max date to today for date inputs
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('startDate').max = today;
            document.getElementById('endDate').max = today;
            document.getElementById('endDate').value = today;
            
            // Set start date to 7 days ago
            const sevenDaysAgo = new Date();
            sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
            document.getElementById('startDate').value = sevenDaysAgo.toISOString().split('T')[0];
            
            // Start auto-refresh only if enabled
            if (isAutoRefreshEnabled) {
                startAutoRefresh();
            }
            
            // Set the toggle to match the current state
            document.getElementById('autoRefreshToggle').checked = isAutoRefreshEnabled;
        });
        // Initialize Chart
        function initializeChart() {
            const ctx = document.getElementById('messageChart').getContext('2d');
            messageChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Leads Sent',
                        data: [],
                        borderColor: '#128c7e',
                        backgroundColor: 'rgba(18, 140, 126, 0.1)',
                        tension: 0.4
                    }, {
                        label: 'Leads Received',
                        data: [],
                        borderColor: '#25d366',
                        backgroundColor: 'rgba(37, 211, 102, 0.1)',
                        tension: 0.4
                    }, {
                        label: 'Leads Read',
                        data: [],
                        borderColor: '#34b7f1',
                        backgroundColor: 'rgba(52, 183, 241, 0.1)',
                        tension: 0.4
                    }, {
                        label: 'Leads Replied',
                        data: [],
                        borderColor: '#00a884',
                        backgroundColor: 'rgba(0, 168, 132, 0.1)',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                        },
                        title: {
                            display: true,
                            text: 'Lead Activity Trends'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Number of Leads'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Date'
                            }
                        }
                    }
                }
            });
        }
        // Load Dashboard Data
        function loadDashboardData(days, silent = false) {
            if (!silent) {
                showLoading();
            }
            
            // Build URL with device filter
            let url = `/api/analytics/${days}`;
            if (currentDeviceFilter && currentDeviceFilter !== 'all') {
                url += `?device=${currentDeviceFilter}`;
            }
            
            // Fetch real data from API
            fetch(url, {
                credentials: 'include'
            })
                .then(response => response.json())
                .then(data => {
                    if (data.code === 'SUCCESS') {
                        updateMetrics(data.results.metrics);
                        updateChart(data.results.daily);
                    }
                    if (!silent) {
                        hideLoading();
                    }
                })
                .catch(error => {
                    console.error('Error loading analytics:', error);
                    // Fallback to mock data
                    const mockData = generateMockData(days);
                    updateMetrics(mockData.metrics);
                    updateChart(mockData.daily);
                    if (!silent) {
                        hideLoading();
                    }
                });
        }
        // Generate Mock Data
        function generateMockData(days) {
            const leadsSent = Math.floor(Math.random() * 1000) + 500;
            const leadsReceived = Math.floor(leadsSent * 0.8); // 80% received
            const leadsNotReceived = leadsSent - leadsReceived;
            const leadsRead = Math.floor(leadsReceived * 0.7); // 70% of received are read
            const leadsNotRead = leadsReceived - leadsRead;
            const leadsReplied = Math.floor(leadsRead * 0.5); // 50% of read are replied
            
            const metrics = {
                activeDevices: devices.filter(d => d.status === 'online').length,
                inactiveDevices: devices.filter(d => d.status === 'offline').length,
                leadsSent: leadsSent,
                leadsReceived: leadsReceived,
                leadsNotReceived: leadsNotReceived,
                leadsRead: leadsRead,
                leadsNotRead: leadsNotRead,
                leadsReplied: leadsReplied
            };

            const daily = [];
            const today = new Date();
            
            for (let i = days - 1; i >= 0; i--) {
                const date = new Date(today);
                date.setDate(today.getDate() - i);
                
                daily.push({
                    date: date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),
                    sent: Math.floor(Math.random() * 100) + 20,
                    received: Math.floor(Math.random() * 80) + 15,
                    read: Math.floor(Math.random() * 60) + 10,
                    replied: Math.floor(Math.random() * 30) + 5
                });
            }

            return { metrics, daily };
        }